//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.3082
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace iTrip.iWebServiceReferenceFlight {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="iWebServiceReferenceFlight.iWebServiceFlightSoap")]
    public interface iWebServiceFlightSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFlightList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetFlightList(string userName, string whereStr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFlightOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        iTrip.iWebServiceReferenceFlight.FLIGHT_ORDER GetFlightOrder(int FLIGHT_ORDER_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddFlightOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void AddFlightOrder(iTrip.iWebServiceReferenceFlight.FLIGHT_ORDER Entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateFlightOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void UpdateFlightOrder(iTrip.iWebServiceReferenceFlight.FLIGHT_ORDER Entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteFlightOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        void DeleteFlightOrder(int FLIGHT_ORDER_ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderFlightList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetOrderFlightList(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFlightCorporationList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetFlightCorporationList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFlightFromList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetFlightFromList(int fromOrTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAirPortList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        System.Data.DataSet GetAirPortList();
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FLIGHT_ORDER : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int fLIGHT_ORDER_IDField;
        
        private int fLIGHT_IDField;
        
        private string uSER_NAMEField;
        
        private System.Nullable<int> cONFIRM_FLAGField;
        
        private System.Nullable<decimal> fAREField;
        
        private System.Nullable<int> pERSON_COUNTField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int FLIGHT_ORDER_ID {
            get {
                return this.fLIGHT_ORDER_IDField;
            }
            set {
                this.fLIGHT_ORDER_IDField = value;
                this.RaisePropertyChanged("FLIGHT_ORDER_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int FLIGHT_ID {
            get {
                return this.fLIGHT_IDField;
            }
            set {
                this.fLIGHT_IDField = value;
                this.RaisePropertyChanged("FLIGHT_ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string USER_NAME {
            get {
                return this.uSER_NAMEField;
            }
            set {
                this.uSER_NAMEField = value;
                this.RaisePropertyChanged("USER_NAME");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<int> CONFIRM_FLAG {
            get {
                return this.cONFIRM_FLAGField;
            }
            set {
                this.cONFIRM_FLAGField = value;
                this.RaisePropertyChanged("CONFIRM_FLAG");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<decimal> FARE {
            get {
                return this.fAREField;
            }
            set {
                this.fAREField = value;
                this.RaisePropertyChanged("FARE");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<int> PERSON_COUNT {
            get {
                return this.pERSON_COUNTField;
            }
            set {
                this.pERSON_COUNTField = value;
                this.RaisePropertyChanged("PERSON_COUNT");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface iWebServiceFlightSoapChannel : iTrip.iWebServiceReferenceFlight.iWebServiceFlightSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class iWebServiceFlightSoapClient : System.ServiceModel.ClientBase<iTrip.iWebServiceReferenceFlight.iWebServiceFlightSoap>, iTrip.iWebServiceReferenceFlight.iWebServiceFlightSoap {
        
        public iWebServiceFlightSoapClient() {
        }
        
        public iWebServiceFlightSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public iWebServiceFlightSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iWebServiceFlightSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public iWebServiceFlightSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetFlightList(string userName, string whereStr) {
            return base.Channel.GetFlightList(userName, whereStr);
        }
        
        public iTrip.iWebServiceReferenceFlight.FLIGHT_ORDER GetFlightOrder(int FLIGHT_ORDER_ID) {
            return base.Channel.GetFlightOrder(FLIGHT_ORDER_ID);
        }
        
        public void AddFlightOrder(iTrip.iWebServiceReferenceFlight.FLIGHT_ORDER Entity) {
            base.Channel.AddFlightOrder(Entity);
        }
        
        public void UpdateFlightOrder(iTrip.iWebServiceReferenceFlight.FLIGHT_ORDER Entity) {
            base.Channel.UpdateFlightOrder(Entity);
        }
        
        public void DeleteFlightOrder(int FLIGHT_ORDER_ID) {
            base.Channel.DeleteFlightOrder(FLIGHT_ORDER_ID);
        }
        
        public System.Data.DataSet GetOrderFlightList(string userName) {
            return base.Channel.GetOrderFlightList(userName);
        }
        
        public System.Data.DataSet GetFlightCorporationList() {
            return base.Channel.GetFlightCorporationList();
        }
        
        public System.Data.DataSet GetFlightFromList(int fromOrTo) {
            return base.Channel.GetFlightFromList(fromOrTo);
        }
        
        public System.Data.DataSet GetAirPortList() {
            return base.Channel.GetAirPortList();
        }
    }
}
